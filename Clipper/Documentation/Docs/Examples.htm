<html>
<head>
  <title>Examples</title><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../Menu/menu.js"></script><script type="text/javascript" src="../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF" onload="OnLoadEvent()">
  <div class="menu" id="menu" onmouseleave="OnMouseLeaveEvent()"><a class="ancestor" href="_Body.htm">Index</a><a href="./Overview.htm">Overview</a><span class="submenu_owner" onmouseover="onSubmenuPopup(this)"><span class="submenu_heading">Units</span>
      <div class="submenu_background"><a href="./Units/Clipper/_Body.htm">Clipper</a><a href="./Units/Clipper.Core/_Body.htm">Clipper.Core</a><a href="./Units/Clipper.Engine/_Body.htm">Clipper.Engine</a><a href="./Units/Clipper.Export/_Body.htm">Clipper.Export</a><a href="./Units/Clipper.Minkowski/_Body.htm">Clipper.Minkowski</a><a href="./Units/Clipper.Offset/_Body.htm">Clipper.Offset</a><a href="./Units/Clipper.RectClip/_Body.htm">Clipper.RectClip</a>
      </div></span><a href="./Robustness.htm">Robustness</a><a href="./USINGZ.htm">USINGZ</a><a href="./FAQ.htm">FAQ</a><a href="./Trigonometry.htm">Trigonometry</a><a class="icon_container" id="icon_container" href="javascript:void(0)" onclick="hamburger()"><img id="menu_icon" src="../Menu/hamburger.svg"></a>
  </div><br><br>

  <h1>Examples</h1>
  <p> 
    <div class="pseudoTbl">
      <div><b>C++ Sample 1:</b>
      </div>
      <pre class="brush: cpp;">
  #include "clipper2/clipper.h"
  ...
  using namespace Clipper2Lib;
  int main()
  {
    Paths64 subject, clip, solution;
    subject.push_back(MakePath({100, 50, 10, 79, 65, 2, 65, 98, 10, 21}));
    clip.push_back(MakePath({98, 63, 4, 68, 77, 8, 52, 100, 19, 12}));
    solution = Intersect(subject, clip, FillRule::NonZero);    
  }  
  
      </pre>
    </div> </p>
  <p> 
    <div class="pseudoTbl">
      <div><b>C# Sample 1:</b>
      </div>
      <pre class="brush: csharp;">
  ...
  using Clipper2Lib;	
  ...
  static void Main(string[] args)
  {
    Paths64 subj = new Paths64();
    Paths64 clip = new Paths64();
    subj.Add(Clipper.MakePath(new int[] { 
      100, 50, 10, 79, 65, 2, 65, 98, 10, 21 }));
    clip.Add(Clipper.MakePath(new int[] { 
      98, 63, 4, 68, 77, 8, 52, 100, 19, 12 }));
    Paths64 solution = Clipper.Intersect(subj, clip, FillRule.NonZero);
  }
  
      </pre>
    </div> </p>
  <p> 
    <div class="pseudoTbl">
      <div><b>Delphi Sample 1:</b>
      </div>
      <pre class="brush: delphi;">
  uses
    Clipper, Clipper.Core;
  	
  var 
    subject, clip, solution: TPaths64;
  begin
    SetLength(subject, 1);
    subject[0] := MakePath([100, 50, 10, 79, 65, 2, 65, 98, 10, 21]);
    SetLength(clip, 1);
    clip[0] := MakePath([98, 63, 4, 68, 77, 8, 52, 100, 19, 12]);
    solution := Intersect( subject, clip, frNonZero);
    
    //DrawPolygons    
  
      </pre>
    </div> </p>
  <p> <img src="../Images/intersect.svg" alt="" border="0"> </p>
  <p> 
    <div class="pseudoTbl">
      <div><b>C++ Sample 2:</b>
      </div>
      <pre class="brush: cpp;">
  #include "clipper2/clipper.h"
  ...
  using namespace Clipper2Lib;
    
  int main()
  {
    //set up the subject and clip polygons ...
    Paths64 subject;
    subject.push_back(Ellipse(Rect64(100,100,300,300)));
    subject.push_back(Ellipse(Rect64(125,130,275,180)));
    subject.push_back(Ellipse(Rect64(125,220,275,270)));
    
    Paths64 clip;
    clip.push_back(Ellipse(Rect64(140,70,220,320));
    
    //get the intersection
    Paths64 solution = Intersect(subject, clip, FillRule::EvenOdd);
    
    //DrawPolygons    
  }    
  
      </pre>
    </div> </p>
  <p> 
    <div class="pseudoTbl">
      <div><b>C# Sample 2:</b>
      </div>
      <pre class="brush: csharp;">
  ...
  using Clipper2Lib;	
  ...
    
  static void Main(string[] args)
  {
    Paths64 subject = new Paths64(3);
    subject.Add(Ellipse(new Rect64(100,100,300,300)));
    subject.Add(Ellipse(new Rect64(125,130,275,180)));
    subject.Add(Ellipse(new Rect64(125,220,275,270)));
    
    Paths64 clip = new Paths64(1);
    clip.Add(GetEllipsePoints(new Rect64(140,70,220,320)));
        
    Paths64 solution = Intersect(subject, clip, FillRule.EvenOdd);
    
    //DrawPolygons    
  }
  
  
      </pre>
    </div> </p>
  <p> 
    <div class="pseudoTbl">
      <div><b>Delphi Sample 2:</b>
      </div>
      <pre class="brush: delphi;">
  uses
    Img32, Clipper, Clipper.Core;
  	
  var
    subject, clip, solution: TPaths64;
  begin

    //set up the subject and clip polygons ...
    SetLength(sub, 3);
    subject[0] := Ellipse(Rect64(100,100,300,300));
    subject[1] := Ellipse(Rect64(125,130,275,180));
    subject[2] := Ellipse(Rect64(125,220,275,270));
	
    SetLength(clip, 1);
    clip[0] := Ellipse(Rect64(140,70,220,320));

    //get the intersection of the subject and clip polygons ...
    solution := Intersect(subject, clip, frEvenOdd);
    //display polygons    
  
      </pre>
    </div> </p>
  <p> <img src="../Images/intersect2.svg" alt="" border="0"> </p>
  <p class="Copyright" id="auto"> <br><br> Copyright &#169; 2010-2024 Angus Johnson &#160; - &#160; Clipper2 1.3.0 &#160; - &#160; Help file built on 14 Jan 2024<br><br> </p>

</body>
</html>