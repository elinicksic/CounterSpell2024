<html>
<head>
  <title>Paths64</title><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Clipper</a><span class="active">Paths64</span>
  </div><br><br>

  <h1>Paths64</h1>
  <p class="Decl"><span class="Language">Delphi</span> TPaths = <b>array of </b><a href="./Path64.htm">TPath64</a>;</p>
  <p class="Decl"><span class="Language">C++</span> <b>typedef</b> std::vector&lt; <a href="./Path64.htm">Path64</a> &gt; Paths64;</p>
  <p class="Decl"><span class="Language">C#&nbsp;</span> <b>using</b> Paths64 = List&lt;List&lt; <a href="./Point64.htm">Point64</a> &gt;&gt;;</p><br class="half">
  <p> <span class="monobold">Paths64</span> represent one or more <a href="./Path64.htm">Path64</a> structures. While a single path can represent a simple polygon, multiple paths are usually required to define complex polygons that contain one or more holes.<br><br> While it's <i>usual</i> to list outer path contours before their inner path (hole) contours, this isn't strictly necessary. Whether a given path in a <b>Paths64</b> object is a hole or otherwise is derived by its geometric position relative to the other paths in the <b>Paths64</b> object and with reference to a <a href="./FillRule.htm"><b>filling rule</b></a> that's usually associated with <b>Paths64</b> objects. </p><br>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../Clipper.Engine/Classes/Clipper64/Functions/AddClip.htm">Clipper64.AddClip</a>, <a href="../../Clipper.Engine/Classes/Clipper64/Functions/AddOpenSubject.htm">Clipper64.AddOpenSubject</a>, <a href="../../Clipper.Engine/Classes/Clipper64/Functions/AddSubject.htm">Clipper64.AddSubject</a>, <a href="../../Clipper.Engine/Classes/Clipper64/Functions/Execute.htm">Clipper64.Execute</a>, <a href="../Functions/InflatePaths.htm">InflatePaths</a>, <a href="FillRule.htm">FillRule</a>, <a href="Path64.htm">Path64</a>, <a href="PathsD.htm">PathsD</a>, <a href="Point64.htm">Point64</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &#169; 2010-2024 Angus Johnson &#160; - &#160; Clipper2 1.3.0 &#160; - &#160; Help file built on 14 Jan 2024<br><br> </p>

</body>
</html>